import{_ as s,c as a,o as l,ah as e}from"./chunks/framework.C2PqkmK9.js";const o=JSON.parse('{"title":"PHP 实用函数手册","description":"","frontmatter":{},"headers":[],"relativePath":"fun.md","filePath":"fun.md"}'),t={name:"fun.md"};function h(n,i,p,k,r,d){return l(),a("div",null,i[0]||(i[0]=[e(`<h1 id="php-实用函数手册" tabindex="-1">PHP 实用函数手册 <a class="header-anchor" href="#php-实用函数手册" aria-label="Permalink to “PHP 实用函数手册”">​</a></h1><p>本手册提供了一组 PHP 实用函数的概览，这些函数旨在简化常见任务，如 Redis 操作、文件处理、字符串操作、Web 工具、数据转换等。每个函数都记录了其用途、参数和示例用法。</p><h2 id="目录" tabindex="-1">目录 <a class="header-anchor" href="#目录" aria-label="Permalink to “目录”">​</a></h2><ol><li><a href="#redis-操作">Redis 操作</a></li><li><a href="#文件处理">文件处理</a></li><li><a href="#字符串操作">字符串操作</a></li><li><a href="#web-工具">Web 工具</a></li><li><a href="#数据转换">数据转换</a></li><li><a href="#其他功能">其他功能</a></li></ol><hr><h2 id="redis-操作" tabindex="-1">Redis 操作 <a class="header-anchor" href="#redis-操作" aria-label="Permalink to “Redis 操作”">​</a></h2><h3 id="predis" tabindex="-1"><code>predis()</code> <a class="header-anchor" href="#predis" aria-label="Permalink to “predis()”">​</a></h3><p>使用 Predis 库连接到 Redis 服务器并返回客户端实例。</p><p><strong>参数：</strong></p><ul><li>无（使用全局 <code>$redis_config</code> 获取主机、端口和认证信息）。</li></ul><p><strong>返回值：</strong></p><ul><li>Predis\\Client：Redis 客户端实例。</li></ul><p><strong>示例：</strong></p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$redis </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> predis</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$redis</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;key&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;value&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $redis</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;key&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 输出：value</span></span></code></pre></div><h3 id="predis-add-geo-key-arr" tabindex="-1"><code>predis_add_geo($key, $arr)</code> <a class="header-anchor" href="#predis-add-geo-key-arr" aria-label="Permalink to “predis_add_geo($key, $arr)”">​</a></h3><p>将地理位置数据添加到 Redis 排序集合。</p><p><strong>参数：</strong></p><ul><li><code>$key</code> (string)：Redis 排序集合的键。</li><li><code>$arr</code> (array)：包含经度 (<code>lng</code>)、纬度 (<code>lat</code>) 和标题 (<code>title</code>) 的位置数组。</li></ul><p><strong>示例：</strong></p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">predis_add_geo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;places&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &#39;lng&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;116.397128&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &#39;lat&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;39.916527&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &#39;title&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;北京天安门&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]);</span></span></code></pre></div><h3 id="predis-delete-geo-key-arr" tabindex="-1"><code>predis_delete_geo($key, $arr)</code> <a class="header-anchor" href="#predis-delete-geo-key-arr" aria-label="Permalink to “predis_delete_geo($key, $arr)”">​</a></h3><p>从 Redis 排序集合中删除指定地理位置。</p><p><strong>参数：</strong></p><ul><li><code>$key</code> (string)：Redis 排序集合的键。</li><li><code>$arr</code> (array)：要删除的标题数组。</li></ul><p><strong>示例：</strong></p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">predis_delete_geo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;places&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;北京天安门&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]);</span></span></code></pre></div><h3 id="predis-get-pager-key-lat-lng-juli-2-sort-asc-to-fixed-2" tabindex="-1"><code>predis_get_pager($key, $lat, $lng, $juli = 2, $sort = &#39;ASC&#39;, $to_fixed = 2)</code> <a class="header-anchor" href="#predis-get-pager-key-lat-lng-juli-2-sort-asc-to-fixed-2" aria-label="Permalink to “predis_get_pager($key, $lat, $lng, $juli = 2, $sort = &#39;ASC&#39;, $to_fixed = 2)”">​</a></h3><p>返回指定坐标附近的地点的分页数据。</p><p><strong>参数：</strong></p><ul><li><code>$key</code> (string)：Redis 排序集合的键。</li><li><code>$lat</code> (float)：纬度。</li><li><code>$lng</code> (float)：经度。</li><li><code>$juli</code> (float)：搜索半径（默认 2 公里）。</li><li><code>$sort</code> (string)：排序方式（默认 &#39;ASC&#39;）。</li><li><code>$to_fixed</code> (int)：距离保留小数位数（默认 2）。</li></ul><p><strong>返回值：</strong></p><ul><li>array：包含分页信息的数组（<code>current_page</code>, <code>data</code>, <code>last_page</code>, <code>per_page</code>, <code>total</code>, <code>total_cur</code>）。</li></ul><p><strong>示例：</strong></p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$result </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> predis_get_pager</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;places&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">39.915049</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">116.403958</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">($result); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 输出附近地点的分页数据</span></span></code></pre></div><h3 id="predis-geo-pos-key-title-to-fixed-6" tabindex="-1"><code>predis_geo_pos($key, $title = [], $to_fixed = 6)</code> <a class="header-anchor" href="#predis-geo-pos-key-title-to-fixed-6" aria-label="Permalink to “predis_geo_pos($key, $title = [], $to_fixed = 6)”">​</a></h3><p>获取指定地点的经纬度。</p><p><strong>参数：</strong></p><ul><li><code>$key</code> (string)：Redis 排序集合的键。</li><li><code>$title</code> (array)：要查询的标题数组。</li><li><code>$to_fixed</code> (int)：经纬度保留小数位数（默认 6）。</li></ul><p><strong>返回值：</strong></p><ul><li>array：包含标题和对应经纬度的数组。</li></ul><p><strong>示例：</strong></p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$positions </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> predis_geo_pos</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;places&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;北京天安门&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">($positions); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 输出经纬度数据</span></span></code></pre></div><h3 id="redis-pub-channel-message" tabindex="-1"><code>redis_pub($channel, $message)</code> <a class="header-anchor" href="#redis-pub-channel-message" aria-label="Permalink to “redis_pub($channel, $message)”">​</a></h3><p>发布消息到指定 Redis 频道。</p><p><strong>参数：</strong></p><ul><li><code>$channel</code> (string)：Redis 频道名称。</li><li><code>$message</code> (mixed)：要发布的消息（数组会自动转为 JSON）。</li></ul><p><strong>示例：</strong></p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">redis_pub</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;demo&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;welcome man&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 或</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">redis_pub</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;demo&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;title&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;yourname&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]);</span></span></code></pre></div><h3 id="redis-sub-channel-call-unsubscribe-false" tabindex="-1"><code>redis_sub($channel, $call, $unsubscribe = false)</code> <a class="header-anchor" href="#redis-sub-channel-call-unsubscribe-false" aria-label="Permalink to “redis_sub($channel, $call, $unsubscribe = false)”">​</a></h3><p>订阅 Redis 频道并处理接收到的消息。</p><p><strong>参数：</strong></p><ul><li><code>$channel</code> (string)：Redis 频道名称。</li><li><code>$call</code> (callable)：处理消息的回调函数。</li><li><code>$unsubscribe</code> (bool)：是否在接收消息后取消订阅（默认 false）。</li></ul><p><strong>示例：</strong></p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">redis_sub</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;demo&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">($channel, $message) {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;channel </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$channel</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    print_r</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">($message);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><h3 id="cache-key-data-second-null" tabindex="-1"><code>cache($key, $data = &#39;&#39;, $second = null)</code> <a class="header-anchor" href="#cache-key-data-second-null" aria-label="Permalink to “cache($key, $data = &#39;&#39;, $second = null)”">​</a></h3><p>设置或获取 Redis 缓存。</p><p><strong>参数：</strong></p><ul><li><code>$key</code> (string)：缓存键。</li><li><code>$data</code> (mixed)：要存储的数据（为空时获取缓存，null 时删除缓存）。</li><li><code>$second</code> (int|null)：缓存过期时间（秒）。</li></ul><p><strong>返回值：</strong></p><ul><li>mixed：缓存数据或 null。</li></ul><p><strong>示例：</strong></p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cache</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;my_key&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;my_value&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3600</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 设置缓存</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> cache</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;my_key&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 获取缓存</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cache</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;my_key&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 删除缓存</span></span></code></pre></div><h3 id="cache-delete-key" tabindex="-1"><code>cache_delete($key)</code> <a class="header-anchor" href="#cache-delete-key" aria-label="Permalink to “cache_delete($key)”">​</a></h3><p>删除指定 Redis 缓存。</p><p><strong>参数：</strong></p><ul><li><code>$key</code> (string)：缓存键。</li></ul><p><strong>示例：</strong></p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cache_delete</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;my_key&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h3 id="lock-call-key-call-time-10" tabindex="-1"><code>lock_call($key, $call, $time = 10)</code> <a class="header-anchor" href="#lock-call-key-call-time-10" aria-label="Permalink to “lock_call($key, $call, $time = 10)”">​</a></h3><p>基于 Redis 的锁机制执行回调函数。</p><p><strong>参数：</strong></p><ul><li><code>$key</code> (string)：锁的键。</li><li><code>$call</code> (callable)：要执行的回调函数。</li><li><code>$time</code> (int)：锁的超时时间（秒，默认 10）。</li></ul><p><strong>示例：</strong></p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">lock_call</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;my_lock&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;Locked operation&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h3 id="lock-start-key-time-1" tabindex="-1"><code>lock_start($key, $time = 1)</code> <a class="header-anchor" href="#lock-start-key-time-1" aria-label="Permalink to “lock_start($key, $time = 1)”">​</a></h3><p>开始 Redis 锁。</p><p><strong>参数：</strong></p><ul><li><code>$key</code> (string)：锁的键。</li><li><code>$time</code> (int)：锁的超时时间（秒，默认 1）。</li></ul><p><strong>返回值：</strong></p><ul><li>bool：锁是否成功。</li></ul><p><strong>示例：</strong></p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">lock_start</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;my_lock&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 执行操作</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    lock_end</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="lock-end" tabindex="-1"><code>lock_end()</code> <a class="header-anchor" href="#lock-end" aria-label="Permalink to “lock_end()”">​</a></h3><p>释放 Redis 锁。</p><p><strong>示例：</strong></p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">lock_end</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span></code></pre></div><hr><h2 id="文件处理" tabindex="-1">文件处理 <a class="header-anchor" href="#文件处理" aria-label="Permalink to “文件处理”">​</a></h2><h3 id="download-file-url-contain-http-false" tabindex="-1"><code>_download_file($url, $contain_http = false)</code> <a class="header-anchor" href="#download-file-url-contain-http-false" aria-label="Permalink to “_download_file($url, $contain_http = false)”">​</a></h3><p>下载文件并返回本地路径。</p><p><strong>参数：</strong></p><ul><li><code>$url</code> (string)：文件 URL。</li><li><code>$contain_http</code> (bool)：是否返回包含完整 HTTP 地址的路径（默认 false）。</li></ul><p><strong>返回值：</strong></p><ul><li>string：文件本地路径。</li></ul><p><strong>示例：</strong></p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$path </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> _download_file</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;https://example.com/image.jpg&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $path; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 输出本地路径</span></span></code></pre></div><h3 id="download-file-url-mimes-image-video-cons-contain-http-false" tabindex="-1"><code>download_file($url, $mimes = [&#39;image/*&#39;, &#39;video/*&#39;], $cons = [], $contain_http = false)</code> <a class="header-anchor" href="#download-file-url-mimes-image-video-cons-contain-http-false" aria-label="Permalink to “download_file($url, $mimes = [&#39;image/*&#39;, &#39;video/*&#39;], $cons = [], $contain_http = false)”">​</a></h3><p>下载指定类型的资源文件到本地。</p><p><strong>参数：</strong></p><ul><li><code>$url</code> (string)：文件 URL。</li><li><code>$mimes</code> (array)：允许的 MIME 类型（默认图片和视频）。</li><li><code>$cons</code> (array)：URL 必须包含的字符串。</li><li><code>$contain_http</code> (bool)：是否返回完整 HTTP 路径（默认 false）。</li></ul><p><strong>返回值：</strong></p><ul><li>string|null：文件本地路径或 null。</li></ul><p><strong>示例：</strong></p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$path </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> download_file</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;https://example.com/image.jpg&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;image/*&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]);</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $path; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 输出本地路径</span></span></code></pre></div><h3 id="download-remote-file-url-path" tabindex="-1"><code>download_remote_file($url, $path = &#39;&#39;)</code> <a class="header-anchor" href="#download-remote-file-url-path" aria-label="Permalink to “download_remote_file($url, $path = &#39;&#39;)”">​</a></h3><p>下载远程文件到本地并返回 CDN 路径。</p><p><strong>参数：</strong></p><ul><li><code>$url</code> (string)：远程文件 URL。</li><li><code>$path</code> (string)：本地存储路径（默认使用全局 <code>$remote_to_local_path</code>）。</li></ul><p><strong>返回值：</strong></p><ul><li>string：CDN 路径。</li></ul><p><strong>示例：</strong></p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$cdn_url </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> download_remote_file</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;https://example.com/file.pdf&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $cdn_url; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 输出 CDN 路径</span></span></code></pre></div><h3 id="load-xls-new-arr" tabindex="-1"><code>load_xls($new_arr = [])</code> <a class="header-anchor" href="#load-xls-new-arr" aria-label="Permalink to “load_xls($new_arr = [])”">​</a></h3><p>加载 XLSX 文件并解析为数组。</p><p><strong>参数：</strong></p><ul><li><code>$new_arr</code> (array)： <ul><li><code>file</code> (string)：XLSX 文件路径。</li><li><code>config</code> (array)：列名映射。</li><li><code>title_line</code> (int)：标题行号（默认 1）。</li><li><code>call</code> (callable)：每单元格回调函数。</li><li><code>is_full</code> (bool)：是否返回完整数据（默认 false）。</li></ul></li></ul><p><strong>返回值：</strong></p><ul><li>array：解析后的数据或完整数据结构。</li></ul><p><strong>示例：</strong></p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$data </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> load_xls</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &#39;file&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;example.xlsx&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &#39;config&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;序号&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;index&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &#39;title_line&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &#39;call&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">($i, $row, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$d) {}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">($data); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 输出解析后的数据</span></span></code></pre></div><h3 id="csv-reader-file" tabindex="-1"><code>csv_reader($file)</code> <a class="header-anchor" href="#csv-reader-file" aria-label="Permalink to “csv_reader($file)”">​</a></h3><p>读取 CSV 文件内容。</p><p><strong>参数：</strong></p><ul><li><code>$file</code> (string)：CSV 文件路径。</li></ul><p><strong>返回值：</strong></p><ul><li>array：CSV 数据。</li></ul><p><strong>示例：</strong></p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$data </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> csv_reader</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;data.csv&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">($data); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 输出 CSV 数据</span></span></code></pre></div><h3 id="csv-writer-file-header-content" tabindex="-1"><code>csv_writer($file, $header = [], $content = [])</code> <a class="header-anchor" href="#csv-writer-file-header-content" aria-label="Permalink to “csv_writer($file, $header = [], $content = [])”">​</a></h3><p>写入数据到 CSV 文件。</p><p><strong>参数：</strong></p><ul><li><code>$file</code> (string)：CSV 文件路径。</li><li><code>$header</code> (array)：表头数组。</li><li><code>$content</code> (array)：内容数组。</li></ul><p><strong>返回值：</strong></p><ul><li>bool：写入是否成功。</li></ul><p><strong>示例：</strong></p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">csv_writer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;output.csv&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;ID&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Name&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">], [[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;1&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;John&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">], [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;2&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Jane&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]]);</span></span></code></pre></div><h3 id="zip-extract-local-file-extract-local-dir" tabindex="-1"><code>zip_extract($local_file, $extract_local_dir)</code> <a class="header-anchor" href="#zip-extract-local-file-extract-local-dir" aria-label="Permalink to “zip_extract($local_file, $extract_local_dir)”">​</a></h3><p>解压本地 ZIP 文件到指定目录。</p><p><strong>参数：</strong></p><ul><li><code>$local_file</code> (string)：ZIP 文件路径。</li><li><code>$extract_local_dir</code> (string)：解压目标目录。</li></ul><p><strong>返回值：</strong></p><ul><li>bool：解压是否成功。</li></ul><p><strong>示例：</strong></p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">zip_extract</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;archive.zip&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/path/to/extract&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h3 id="zip-create-local-zip-file-files" tabindex="-1"><code>zip_create($local_zip_file, $files = [])</code> <a class="header-anchor" href="#zip-create-local-zip-file-files" aria-label="Permalink to “zip_create($local_zip_file, $files = [])”">​</a></h3><p>创建 ZIP 文件。</p><p><strong>参数：</strong></p><ul><li><code>$local_zip_file</code> (string)：ZIP 文件路径。</li><li><code>$files</code> (array)：要压缩的文件数组。</li></ul><p><strong>返回值：</strong></p><ul><li>string：创建的 ZIP 文件路径（相对于 PATH）。</li></ul><p><strong>示例：</strong></p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$zip_path </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> zip_create</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/path/to/archive.zip&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;file1.txt&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;file2.txt&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]);</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $zip_path; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 输出 ZIP 文件路径</span></span></code></pre></div><h3 id="get-include-content-local-file" tabindex="-1"><code>get_include_content($local_file)</code> <a class="header-anchor" href="#get-include-content-local-file" aria-label="Permalink to “get_include_content($local_file)”">​</a></h3><p>获取本地 PHP 文件的输出内容。</p><p><strong>参数：</strong></p><ul><li><code>$local_file</code> (string)：PHP 文件路径。</li></ul><p><strong>返回值：</strong></p><ul><li>string|null：文件输出内容或 null。</li></ul><p><strong>示例：</strong></p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$content </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> get_include_content</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;template.php&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $content; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 输出文件内容</span></span></code></pre></div><hr><h2 id="字符串操作" tabindex="-1">字符串操作 <a class="header-anchor" href="#字符串操作" aria-label="Permalink to “字符串操作”">​</a></h2><h3 id="gbk-substr-text-start-len-gbk-gbk" tabindex="-1"><code>gbk_substr($text, $start, $len, $gbk = &#39;GBK&#39;)</code> <a class="header-anchor" href="#gbk-substr-text-start-len-gbk-gbk" aria-label="Permalink to “gbk_substr($text, $start, $len, $gbk = &#39;GBK&#39;)”">​</a></h3><p>按 GBK 编码截取字符串（一个中文算 2 个字符）。</p><p><strong>参数：</strong></p><ul><li><code>$text</code> (string)：输入字符串。</li><li><code>$start</code> (int)：起始位置。</li><li><code>$len</code> (int)：截取长度。</li><li><code>$gbk</code> (string)：编码（默认 &#39;GBK&#39;）。</li></ul><p><strong>返回值：</strong></p><ul><li>string：截取后的字符串。</li></ul><p><strong>示例：</strong></p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> gbk_substr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;你好世界&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 输出：你好</span></span></code></pre></div><h3 id="get-gbk-len-value-gbk-gbk" tabindex="-1"><code>get_gbk_len($value, $gbk = &#39;GBK&#39;)</code> <a class="header-anchor" href="#get-gbk-len-value-gbk-gbk" aria-label="Permalink to “get_gbk_len($value, $gbk = &#39;GBK&#39;)”">​</a></h3><p>计算字符串的 GBK 编码长度。</p><p><strong>参数：</strong></p><ul><li><code>$value</code> (string)：输入字符串。</li><li><code>$gbk</code> (string)：编码（默认 &#39;GBK&#39;）。</li></ul><p><strong>返回值：</strong></p><ul><li>int：字符串长度。</li></ul><p><strong>示例：</strong></p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> get_gbk_len</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;你好&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 输出：4</span></span></code></pre></div><h3 id="get-text-center-str-len" tabindex="-1"><code>get_text_center($str, $len)</code> <a class="header-anchor" href="#get-text-center-str-len" aria-label="Permalink to “get_text_center($str, $len)”">​</a></h3><p>将字符串居中对齐。</p><p><strong>参数：</strong></p><ul><li><code>$str</code> (string)：输入字符串。</li><li><code>$len</code> (int)：总长度。</li></ul><p><strong>返回值：</strong></p><ul><li>string：居中对齐的字符串。</li></ul><p><strong>示例：</strong></p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> get_text_center</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;你好&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">8</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 输出：  你好</span></span></code></pre></div><h3 id="get-text-left-right-arr-length-return-arr-false" tabindex="-1"><code>get_text_left_right($arr, $length, $return_arr = false)</code> <a class="header-anchor" href="#get-text-left-right-arr-length-return-arr-false" aria-label="Permalink to “get_text_left_right($arr, $length, $return_arr = false)”">​</a></h3><p>将字符串数组按左中右排版。</p><p><strong>参数：</strong></p><ul><li><code>$arr</code> (array)：字符串数组。</li><li><code>$length</code> (int)：总长度。</li><li><code>$return_arr</code> (bool)：是否返回数组（默认 false）。</li></ul><p><strong>返回值：</strong></p><ul><li>string|array：排版后的字符串或数组。</li></ul><p><strong>示例：</strong></p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> get_text_left_right</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;左&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;右&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">], </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 输出：左    右</span></span></code></pre></div><h3 id="string-to-array-name-array" tabindex="-1"><code>string_to_array($name, $array = &#39;&#39;)</code> <a class="header-anchor" href="#string-to-array-name-array" aria-label="Permalink to “string_to_array($name, $array = &#39;&#39;)”">​</a></h3><p>将字符串按分隔符转为数组。</p><p><strong>参数：</strong></p><ul><li><code>$name</code> (string)：输入字符串。</li><li><code>$array</code> (array)：分隔符数组（默认包含换行、逗号等）。</li></ul><p><strong>返回值：</strong></p><ul><li>array：分割后的数组。</li></ul><p><strong>示例：</strong></p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">string_to_array</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;a,b,c&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 输出：[a, b, c]</span></span></code></pre></div><h3 id="text-add-br-text-w-br-br" tabindex="-1"><code>text_add_br($text, $w, $br = &#39;&lt;br&gt;&#39;)</code> <a class="header-anchor" href="#text-add-br-text-w-br-br" aria-label="Permalink to “text_add_br($text, $w, $br = &#39;&lt;br&gt;&#39;)”">​</a></h3><p>为长文本自动添加换行。</p><p><strong>参数：</strong></p><ul><li><code>$text</code> (string)：输入文本。</li><li><code>$w</code> (int)：每行最大长度。</li><li><code>$br</code> (string)：换行符（默认 &#39;<br>&#39;）。</li></ul><p><strong>返回值：</strong></p><ul><li>string：添加换行后的文本。</li></ul><p><strong>示例：</strong></p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> text_add_br</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;这是一段很长的文本&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 输出：这段&lt;br&gt;很长&lt;br&gt;的文&lt;br&gt;本</span></span></code></pre></div><h3 id="get-str-number-input" tabindex="-1"><code>get_str_number($input)</code> <a class="header-anchor" href="#get-str-number-input" aria-label="Permalink to “get_str_number($input)”">​</a></h3><p>提取字符串中的数字。</p><p><strong>参数：</strong></p><ul><li><code>$input</code> (string)：输入字符串。</li></ul><p><strong>返回值：</strong></p><ul><li>array：提取的数字数组。</li></ul><p><strong>示例：</strong></p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">get_str_number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Price: 12.34 USD&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 输出：[12.34]</span></span></code></pre></div><hr><h2 id="web-工具" tabindex="-1">Web 工具 <a class="header-anchor" href="#web-工具" aria-label="Permalink to “Web 工具”">​</a></h2><h3 id="allow-cross-origin" tabindex="-1"><code>allow_cross_origin()</code> <a class="header-anchor" href="#allow-cross-origin" aria-label="Permalink to “allow_cross_origin()”">​</a></h3><p>设置跨域请求头。</p><p><strong>示例：</strong></p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">allow_cross_origin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 设置跨域头</span></span></code></pre></div><h3 id="online-view-office-url" tabindex="-1"><code>online_view_office($url)</code> <a class="header-anchor" href="#online-view-office-url" aria-label="Permalink to “online_view_office($url)”">​</a></h3><p>生成在线查看 Office 文件的 URL。</p><p><strong>参数：</strong></p><ul><li><code>$url</code> (string)：Office 文件 URL。</li></ul><p><strong>返回值：</strong></p><ul><li>string：在线查看 URL。</li></ul><p><strong>示例：</strong></p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> online_view_office</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;https://example.com/doc.docx&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 输出 Office 在线查看链接</span></span></code></pre></div><h3 id="jump-url" tabindex="-1"><code>jump($url)</code> <a class="header-anchor" href="#jump-url" aria-label="Permalink to “jump($url)”">​</a></h3><p>页面重定向。</p><p><strong>参数：</strong></p><ul><li><code>$url</code> (string)：目标 URL。</li></ul><p><strong>示例：</strong></p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">jump</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/home&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 重定向到 /home</span></span></code></pre></div><h3 id="cdn" tabindex="-1"><code>cdn()</code> <a class="header-anchor" href="#cdn" aria-label="Permalink to “cdn()”">​</a></h3><p>获取 CDN 地址。</p><p><strong>返回值：</strong></p><ul><li>string：CDN 地址。</li></ul><p><strong>示例：</strong></p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> cdn</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 输出 CDN 地址</span></span></code></pre></div><h3 id="json-data" tabindex="-1"><code>json($data)</code> <a class="header-anchor" href="#json-data" aria-label="Permalink to “json($data)”">​</a></h3><p>以 JSON 格式输出数据并退出。</p><p><strong>参数：</strong></p><ul><li><code>$data</code> (mixed)：要输出的数据。</li></ul><p><strong>示例：</strong></p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">json</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;code&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;msg&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;success&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 输出 JSON 数据</span></span></code></pre></div><h3 id="json-error-arr" tabindex="-1"><code>json_error($arr = [])</code> <a class="header-anchor" href="#json-error-arr" aria-label="Permalink to “json_error($arr = [])”">​</a></h3><p>输出错误 JSON 响应。</p><p><strong>参数：</strong></p><ul><li><code>$arr</code> (array)：错误信息数组。</li></ul><p><strong>返回值：</strong></p><ul><li>JSON 响应。</li></ul><p><strong>示例：</strong></p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">json_error</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;msg&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;Invalid input&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 输出错误 JSON</span></span></code></pre></div><h3 id="json-success-arr" tabindex="-1"><code>json_success($arr = [])</code> <a class="header-anchor" href="#json-success-arr" aria-label="Permalink to “json_success($arr = [])”">​</a></h3><p>输出成功 JSON 响应。</p><p><strong>参数：</strong></p><ul><li><code>$arr</code> (array)：成功信息数组。</li></ul><p><strong>返回值：</strong></p><ul><li>JSON 响应。</li></ul><p><strong>示例：</strong></p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">json_success</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;data&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;ok&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 输出成功 JSON</span></span></code></pre></div><h3 id="get-mime-url" tabindex="-1"><code>get_mime($url)</code> <a class="header-anchor" href="#get-mime-url" aria-label="Permalink to “get_mime($url)”">​</a></h3><p>获取文件的 MIME 类型。</p><p><strong>参数：</strong></p><ul><li><code>$url</code> (string)：文件 URL 或路径。</li></ul><p><strong>返回值：</strong></p><ul><li>string：MIME 类型。</li></ul><p><strong>示例：</strong></p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> get_mime</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;https://example.com/image.jpg&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 输出：image/jpeg</span></span></code></pre></div><h3 id="get-mime-content-content-just-return-ext-false" tabindex="-1"><code>get_mime_content($content, $just_return_ext = false)</code> <a class="header-anchor" href="#get-mime-content-content-just-return-ext-false" aria-label="Permalink to “get_mime_content($content, $just_return_ext = false)”">​</a></h3><p>从内容获取 MIME 类型。</p><p><strong>参数：</strong></p><ul><li><code>$content</code> (string)：文件内容。</li><li><code>$just_return_ext</code> (bool)：是否仅返回扩展名（默认 false）。</li></ul><p><strong>返回值：</strong></p><ul><li>string：MIME 类型或扩展名。</li></ul><p><strong>示例：</strong></p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$content </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> file_get_contents</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;image.jpg&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> get_mime_content</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">($content); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 输出：image/jpeg</span></span></code></pre></div><h3 id="get-remote-file-url-is-json-false" tabindex="-1"><code>get_remote_file($url, $is_json = false)</code> <a class="header-anchor" href="#get-remote-file-url-is-json-false" aria-label="Permalink to “get_remote_file($url, $is_json = false)”">​</a></h3><p>获取远程文件内容。</p><p><strong>参数：</strong></p><ul><li><code>$url</code> (string)：远程文件 URL。</li><li><code>$is_json</code> (bool)：是否解析为 JSON（默认 false）。</li></ul><p><strong>返回值：</strong></p><ul><li>string|array：文件内容或 JSON 解析结果。</li></ul><p><strong>示例：</strong></p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$content </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> get_remote_file</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;https://api.example.com/data&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">($content); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 输出 JSON 解析后的数组</span></span></code></pre></div><h3 id="is-json-request" tabindex="-1"><code>is_json_request()</code> <a class="header-anchor" href="#is-json-request" aria-label="Permalink to “is_json_request()”">​</a></h3><p>判断是否为 JSON 请求。</p><p><strong>返回值：</strong></p><ul><li>bool：是否为 JSON 请求。</li></ul><p><strong>示例：</strong></p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">is_json_request</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()) {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;This is a JSON request&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="html-error-all" tabindex="-1"><code>html_error($all)</code> <a class="header-anchor" href="#html-error-all" aria-label="Permalink to “html_error($all)”">​</a></h3><p>输出 HTML 错误页面。</p><p><strong>参数：</strong></p><ul><li><code>$all</code> (array|string)：错误信息。</li></ul><p><strong>返回值：</strong></p><ul><li>string：HTML 错误内容。</li></ul><p><strong>示例：</strong></p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> html_error</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;error&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;Invalid input&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 输出错误 HTML</span></span></code></pre></div><h3 id="add-js-code" tabindex="-1"><code>add_js($code)</code> <a class="header-anchor" href="#add-js-code" aria-label="Permalink to “add_js($code)”">​</a></h3><p>添加 JavaScript 代码。</p><p><strong>参数：</strong></p><ul><li><code>$code</code> (string)：JS 代码或文件路径。</li></ul><p><strong>示例：</strong></p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">add_js</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;alert(&quot;Hello&quot;);&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h3 id="render-js" tabindex="-1"><code>render_js()</code> <a class="header-anchor" href="#render-js" aria-label="Permalink to “render_js()”">​</a></h3><p>输出内联 JavaScript 代码。</p><p><strong>示例：</strong></p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">render_js</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 输出所有添加的 JS 代码</span></span></code></pre></div><h3 id="render-js-file" tabindex="-1"><code>render_js_file()</code> <a class="header-anchor" href="#render-js-file" aria-label="Permalink to “render_js_file()”">​</a></h3><p>输出 JavaScript 文件引用。</p><p><strong>示例：</strong></p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">render_js_file</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 输出所有 JS 文件的 &lt;script&gt; 标签</span></span></code></pre></div><h3 id="add-css-code" tabindex="-1"><code>add_css($code)</code> <a class="header-anchor" href="#add-css-code" aria-label="Permalink to “add_css($code)”">​</a></h3><p>添加 CSS 代码。</p><p><strong>参数：</strong></p><ul><li><code>$code</code> (string)：CSS 代码或文件路径。</li></ul><p><strong>示例：</strong></p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">add_css</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;body { background: #fff; }&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h3 id="render-css" tabindex="-1"><code>render_css()</code> <a class="header-anchor" href="#render-css" aria-label="Permalink to “render_css()”">​</a></h3><p>输出内联 CSS 代码。</p><p><strong>示例：</strong></p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">render_css</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 输出所有添加的 CSS 代码</span></span></code></pre></div><h3 id="render-css-file" tabindex="-1"><code>render_css_file()</code> <a class="header-anchor" href="#render-css-file" aria-label="Permalink to “render_css_file()”">​</a></h3><p>输出 CSS 文件引用。</p><p><strong>示例：</strong></p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">render_css_file</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 输出所有 CSS 文件的 &lt;link&gt; 标签</span></span></code></pre></div><h3 id="view-file-params" tabindex="-1"><code>view($file, $params = [])</code> <a class="header-anchor" href="#view-file-params" aria-label="Permalink to “view($file, $params = [])”">​</a></h3><p>渲染视图文件。</p><p><strong>参数：</strong></p><ul><li><code>$file</code> (string)：视图文件路径（相对于模块/控制器）。</li><li><code>$params</code> (array)：传递给视图的变量。</li></ul><p><strong>返回值：</strong></p><ul><li>string：渲染后的内容。</li></ul><p><strong>示例：</strong></p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> view</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;index&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;title&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;Home&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]);</span></span></code></pre></div><h3 id="get-reffer-refer" tabindex="-1"><code>get_reffer($refer = &#39;&#39;)</code> <a class="header-anchor" href="#get-reffer-refer" aria-label="Permalink to “get_reffer($refer = &#39;&#39;)”">​</a></h3><p>获取请求的 Referer。</p><p><strong>参数：</strong></p><ul><li><code>$refer</code> (string)：Referer URL（默认使用 $_SERVER[&#39;HTTP_REFERER&#39;]）。</li></ul><p><strong>返回值：</strong></p><ul><li>string：处理后的 Referer URL。</li></ul><p><strong>示例：</strong></p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> get_reffer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 输出 Referer URL</span></span></code></pre></div><h3 id="get-root-domain-host" tabindex="-1"><code>get_root_domain($host = &#39;&#39;)</code> <a class="header-anchor" href="#get-root-domain-host" aria-label="Permalink to “get_root_domain($host = &#39;&#39;)”">​</a></h3><p>获取主域名。</p><p><strong>参数：</strong></p><ul><li><code>$host</code> (string)：主机名（默认使用全局配置）。</li></ul><p><strong>返回值：</strong></p><ul><li>string：主域名。</li></ul><p><strong>示例：</strong></p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> get_root_domain</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;admin.baidu.com&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 输出：baidu.com</span></span></code></pre></div><h3 id="get-sub-domain-host" tabindex="-1"><code>get_sub_domain($host = &#39;&#39;)</code> <a class="header-anchor" href="#get-sub-domain-host" aria-label="Permalink to “get_sub_domain($host = &#39;&#39;)”">​</a></h3><p>获取子域名。</p><p><strong>参数：</strong></p><ul><li><code>$host</code> (string)：主机名（默认使用全局配置）。</li></ul><p><strong>返回值：</strong></p><ul><li>string：子域名。</li></ul><p><strong>示例：</strong></p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> get_sub_domain</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;admin.baidu.com&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 输出：admin</span></span></code></pre></div><h3 id="create-url-url" tabindex="-1"><code>create_url($url)</code> <a class="header-anchor" href="#create-url-url" aria-label="Permalink to “create_url($url)”">​</a></h3><p>生成完整的 URL。</p><p><strong>参数：</strong></p><ul><li><code>$url</code> (string)：相对或绝对 URL。</li></ul><p><strong>返回值：</strong></p><ul><li>string：完整 URL。</li></ul><p><strong>示例：</strong></p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> create_url</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/home&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 输出：https://example.com/home</span></span></code></pre></div><h3 id="block-start-name" tabindex="-1"><code>block_start($name)</code> <a class="header-anchor" href="#block-start-name" aria-label="Permalink to “block_start($name)”">​</a></h3><p>开始捕获页面块内容。</p><p><strong>参数：</strong></p><ul><li><code>$name</code> (string)：块名称。</li></ul><p><strong>示例：</strong></p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">block_start</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;content&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h3 id="block-end-is-muit-false" tabindex="-1"><code>block_end($is_muit = false)</code> <a class="header-anchor" href="#block-end-is-muit-false" aria-label="Permalink to “block_end($is_muit = false)”">​</a></h3><p>结束捕获页面块内容。</p><p><strong>参数：</strong></p><ul><li><code>$is_muit</code> (bool)：是否允许多个同名块（默认 false）。</li></ul><p><strong>返回值：</strong></p><ul><li>string：捕获的内容。</li></ul><p><strong>示例：</strong></p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">block_end</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span></code></pre></div><h3 id="block-clean" tabindex="-1"><code>block_clean()</code> <a class="header-anchor" href="#block-clean" aria-label="Permalink to “block_clean()”">​</a></h3><p>清空所有页面块内容。</p><p><strong>示例：</strong></p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">block_clean</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span></code></pre></div><h3 id="get-block-name" tabindex="-1"><code>get_block($name = &#39;&#39;)</code> <a class="header-anchor" href="#get-block-name" aria-label="Permalink to “get_block($name = &#39;&#39;)”">​</a></h3><p>获取指定页面块内容。</p><p><strong>参数：</strong></p><ul><li><code>$name</code> (string)：块名称（为空时返回所有块）。</li></ul><p><strong>返回值：</strong></p><ul><li>mixed：指定块内容或所有块内容。</li></ul><p><strong>示例：</strong></p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> get_block</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;content&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 输出指定块内容</span></span></code></pre></div><hr><h2 id="数据转换" tabindex="-1">数据转换 <a class="header-anchor" href="#数据转换" aria-label="Permalink to “数据转换”">​</a></h2><h3 id="to-utf8-str" tabindex="-1"><code>to_utf8($str)</code> <a class="header-anchor" href="#to-utf8-str" aria-label="Permalink to “to_utf8($str)”">​</a></h3><p>将字符串或数组转换为 UTF-8 编码。</p><p><strong>参数：</strong></p><ul><li><code>$str</code> (mixed)：输入字符串或数组。</li></ul><p><strong>返回值：</strong></p><ul><li>mixed：转换后的数据。</li></ul><p><strong>示例：</strong></p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> to_utf8</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;你好&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 输出：你好</span></span></code></pre></div><h3 id="array-to-object-arr" tabindex="-1"><code>array_to_object($arr)</code> <a class="header-anchor" href="#array-to-object-arr" aria-label="Permalink to “array_to_object($arr)”">​</a></h3><p>将数组转换为对象。</p><p><strong>参数：</strong></p><ul><li><code>$arr</code> (array)：输入数组。</li></ul><p><strong>返回值：</strong></p><ul><li>object：转换后的对象。</li></ul><p><strong>示例：</strong></p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$obj </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> array_to_object</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;name&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;John&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]);</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print_r</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">($obj); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 输出对象</span></span></code></pre></div><h3 id="object-to-array-obj" tabindex="-1"><code>object_to_array($obj)</code> <a class="header-anchor" href="#object-to-array-obj" aria-label="Permalink to “object_to_array($obj)”">​</a></h3><p>将对象转换为数组。</p><p><strong>参数：</strong></p><ul><li><code>$obj</code> (object)：输入对象。</li></ul><p><strong>返回值：</strong></p><ul><li>array：转换后的数组。</li></ul><p><strong>示例：</strong></p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$arr </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> object_to_array</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">object</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;name&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;John&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">($arr); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 输出数组</span></span></code></pre></div><h3 id="array-to-tree-list-pk-id-pid-pid-child-children-root-0-my-id" tabindex="-1"><code>array_to_tree($list, $pk = &#39;id&#39;, $pid = &#39;pid&#39;, $child = &#39;children&#39;, $root = 0, $my_id = &#39;&#39;)</code> <a class="header-anchor" href="#array-to-tree-list-pk-id-pid-pid-child-children-root-0-my-id" aria-label="Permalink to “array_to_tree($list, $pk = &#39;id&#39;, $pid = &#39;pid&#39;, $child = &#39;children&#39;, $root = 0, $my_id = &#39;&#39;)”">​</a></h3><p>将平面数组转换为树形结构。</p><p><strong>参数：</strong></p><ul><li><code>$list</code> (array)：输入数组。</li><li><code>$pk</code> (string)：主键字段（默认 &#39;id&#39;）。</li><li><code>$pid</code> (string)：父 ID 字段（默认 &#39;pid&#39;）。</li><li><code>$child</code> (string)：子节点字段（默认 &#39;children&#39;）。</li><li><code>$root</code> (int)：根节点 ID（默认 0）。</li><li><code>$my_id</code> (string)：当前 ID（可选）。</li></ul><p><strong>返回值：</strong></p><ul><li>array：树形结构数组。</li></ul><p><strong>示例：</strong></p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$list </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;id&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;pid&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;name&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;Parent&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;id&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;pid&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;name&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;Child&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">];</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$tree </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> array_to_tree</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">($list);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">($tree); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 输出树形结构</span></span></code></pre></div><h3 id="array2xml-arr-root" tabindex="-1"><code>array2xml($arr, $root = &#39;&#39;)</code> <a class="header-anchor" href="#array2xml-arr-root" aria-label="Permalink to “array2xml($arr, $root = &#39;&#39;)”">​</a></h3><p>将数组转换为 XML。</p><p><strong>参数：</strong></p><ul><li><code>$arr</code> (array)：输入数组。</li><li><code>$root</code> (string)：根节点名称（可选）。</li></ul><p><strong>返回值：</strong></p><ul><li>string：XML 字符串。</li></ul><p><strong>示例：</strong></p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$xml </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> array2xml</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;name&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;John&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]);</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $xml; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 输出 XML</span></span></code></pre></div><h3 id="xml2array-xml-content" tabindex="-1"><code>xml2array($xml_content)</code> <a class="header-anchor" href="#xml2array-xml-content" aria-label="Permalink to “xml2array($xml_content)”">​</a></h3><p>将 XML 转换为数组。</p><p><strong>参数：</strong></p><ul><li><code>$xml_content</code> (string)：XML 内容。</li></ul><p><strong>返回值：</strong></p><ul><li>array：转换后的数组。</li></ul><p><strong>示例：</strong></p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$array </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> xml2array</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;&lt;root&gt;&lt;name&gt;John&lt;/name&gt;&lt;/root&gt;&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">($array); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 输出数组</span></span></code></pre></div><h3 id="yaml-str" tabindex="-1"><code>yaml($str)</code> <a class="header-anchor" href="#yaml-str" aria-label="Permalink to “yaml($str)”">​</a></h3><p>将 YAML 转换为数组或数组转换为 YAML。</p><p><strong>参数：</strong></p><ul><li><code>$str</code> (mixed)：输入 YAML 字符串或数组。</li></ul><p><strong>返回值：</strong></p><ul><li>mixed：转换后的数组或 YAML 字符串。</li></ul><p><strong>示例：</strong></p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$array </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> yaml</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;name: John&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">($array); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 输出数组</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$yaml </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> yaml</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;name&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;John&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]);</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $yaml; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 输出 YAML</span></span></code></pre></div><h3 id="array-to-pager-arr" tabindex="-1"><code>array_to_pager($arr)</code> <a class="header-anchor" href="#array-to-pager-arr" aria-label="Permalink to “array_to_pager($arr)”">​</a></h3><p>将数组转换为分页数据。</p><p><strong>参数：</strong></p><ul><li><code>$arr</code> (array)：输入数组。</li></ul><p><strong>返回值：</strong></p><ul><li>array：分页数据（包含 <code>current_page</code>, <code>data</code>, <code>last_page</code>, <code>per_page</code>, <code>total</code>, <code>total_cur</code>）。</li></ul><p><strong>示例：</strong></p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$list </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> array_to_pager</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;item1&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;item2&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;item3&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">($list); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 输出分页数据</span></span></code></pre></div><h3 id="array-to-el-select-all-v-k" tabindex="-1"><code>array_to_el_select($all, $v, $k)</code> <a class="header-anchor" href="#array-to-el-select-all-v-k" aria-label="Permalink to “array_to_el_select($all, $v, $k)”">​</a></h3><p>将数组转换为 Element UI 的 select 组件格式。</p><p><strong>参数：</strong></p><ul><li><code>$all</code> (array)：输入数组。</li><li><code>$v</code> (string)：值字段。</li><li><code>$k</code> (string)：标签字段。</li></ul><p><strong>返回值：</strong></p><ul><li>array：转换后的数组。</li></ul><p><strong>示例：</strong></p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$list </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> array_to_el_select</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;id&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;name&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;John&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">], [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;id&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;name&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;Jane&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]], </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;id&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;name&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">($list); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 输出：[[&#39;label&#39; =&gt; &#39;John&#39;, &#39;value&#39; =&gt; 1], [&#39;label&#39; =&gt; &#39;Jane&#39;, &#39;value&#39; =&gt; 2]]</span></span></code></pre></div><hr><h2 id="其他功能" tabindex="-1">其他功能 <a class="header-anchor" href="#其他功能" aria-label="Permalink to “其他功能”">​</a></h2><h3 id="float-noup-float-number-dot-2" tabindex="-1"><code>float_noup($float_number, $dot = 2)</code> <a class="header-anchor" href="#float-noup-float-number-dot-2" aria-label="Permalink to “float_noup($float_number, $dot = 2)”">​</a></h3><p>不进位截取浮点数。</p><p><strong>参数：</strong></p><ul><li><code>$float_number</code> (float)：输入浮点数。</li><li><code>$dot</code> (int)：保留小数位数（默认 2）。</li></ul><p><strong>返回值：</strong></p><ul><li>float：截取后的浮点数。</li></ul><p><strong>示例：</strong></p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> float_noup</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3.145</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 输出：3.14</span></span></code></pre></div><h3 id="float-up-float-number-dot-2-mid-val-5" tabindex="-1"><code>float_up($float_number, $dot = 2, $mid_val = 5)</code> <a class="header-anchor" href="#float-up-float-number-dot-2-mid-val-5" aria-label="Permalink to “float_up($float_number, $dot = 2, $mid_val = 5)”">​</a></h3><p>四舍五入浮点数。</p><p><strong>参数：</strong></p><ul><li><code>$float_number</code> (float)：输入浮点数。</li><li><code>$dot</code> (int)：保留小数位数（默认 2）。</li><li><code>$mid_val</code> (int)：进位阈值（默认 5）。</li></ul><p><strong>返回值：</strong></p><ul><li>float：四舍五入后的浮点数。</li></ul><p><strong>示例：</strong></p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> float_up</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3.145</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 输出：3.15</span></span></code></pre></div><h3 id="get-ext-by-url-url" tabindex="-1"><code>get_ext_by_url($url)</code> <a class="header-anchor" href="#get-ext-by-url-url" aria-label="Permalink to “get_ext_by_url($url)”">​</a></h3><p>获取 URL 的文件扩展名。</p><p><strong>参数：</strong></p><ul><li><code>$url</code> (string)：文件 URL。</li></ul><p><strong>返回值：</strong></p><ul><li>string：文件扩展名。</li></ul><p><strong>示例：</strong></p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> get_ext_by_url</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;https://example.com/file.pdf&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 输出：pdf</span></span></code></pre></div><h3 id="get-distance-longitude1-latitude1-longitude2-latitude2-unit-2-decimal-2" tabindex="-1"><code>get_distance($longitude1, $latitude1, $longitude2, $latitude2, $unit = 2, $decimal = 2)</code> <a class="header-anchor" href="#get-distance-longitude1-latitude1-longitude2-latitude2-unit-2-decimal-2" aria-label="Permalink to “get_distance($longitude1, $latitude1, $longitude2, $latitude2, $unit = 2, $decimal = 2)”">​</a></h3><p>计算两点间的地理距离。</p><p><strong>参数：</strong></p><ul><li><code>$longitude1</code> (float)：起点经度。</li><li><code>$latitude1</code> (float)：起点纬度。</li><li><code>$longitude2</code> (float)：终点经度。</li><li><code>$latitude2</code> (float)：终点纬度。</li><li><code>$unit</code> (int)：单位（1: 米，2: 公里，默认 2）。</li><li><code>$decimal</code> (int)：保留小数位数（默认 2）。</li></ul><p><strong>返回值：</strong></p><ul><li>float：距离。</li></ul><p><strong>示例：</strong></p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$dist </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> get_distance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">116.397128</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">39.916527</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">116.403958</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">39.915049</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $dist; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 输出距离（公里）</span></span></code></pre></div><h3 id="timeago-time" tabindex="-1"><code>timeago($time)</code> <a class="header-anchor" href="#timeago-time" aria-label="Permalink to “timeago($time)”">​</a></h3><p>将时间转换为“多久前”的格式。</p><p><strong>参数：</strong></p><ul><li><code>$time</code> (string|int)：时间戳或日期字符串。</li></ul><p><strong>返回值：</strong></p><ul><li>string：时间描述。</li></ul><p><strong>示例：</strong></p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> timeago</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">strtotime</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;-1 hour&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 输出：1小时前</span></span></code></pre></div><h3 id="get-barcode-code-type-c128-widthfactor-2-height-30-foregroundcolor-0-0-0" tabindex="-1"><code>get_barcode($code, $type = &#39;C128&#39;, $widthFactor = 2, $height = 30, $foregroundColor = [0, 0, 0])</code> <a class="header-anchor" href="#get-barcode-code-type-c128-widthfactor-2-height-30-foregroundcolor-0-0-0" aria-label="Permalink to “get_barcode($code, $type = &#39;C128&#39;, $widthFactor = 2, $height = 30, $foregroundColor = [0, 0, 0])”">​</a></h3><p>生成条形码图片（Base64 编码）。</p><p><strong>参数：</strong></p><ul><li><code>$code</code> (string)：条形码内容。</li><li><code>$type</code> (string)：条形码类型（默认 &#39;C128&#39;）。</li><li><code>$widthFactor</code> (int)：宽度因子（默认 2）。</li><li><code>$height</code> (int)：高度（默认 30）。</li><li><code>$foregroundColor</code> (array)：前景色 RGB（默认 [0, 0, 0]）。</li></ul><p><strong>返回值：</strong></p><ul><li>string：Base64 编码的图片。</li></ul><p><strong>示例：</strong></p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$barcode </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> get_barcode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;123456789&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;&lt;img src=&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$barcode</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39; /&gt;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 输出条形码图片</span></span></code></pre></div><h3 id="validate-labels-data-rules-show-array-false" tabindex="-1"><code>validate($labels, $data, $rules, $show_array = false)</code> <a class="header-anchor" href="#validate-labels-data-rules-show-array-false" aria-label="Permalink to “validate($labels, $data, $rules, $show_array = false)”">​</a></h3><p>验证数据是否符合规则。</p><p><strong>参数：</strong></p><ul><li><code>$labels</code> (array)：字段标签。</li><li><code>$data</code> (array)：待验证数据。</li><li><code>$rules</code> (array)：验证规则。</li><li><code>$show_array</code> (bool)：是否返回所有错误（默认 false）。</li></ul><p><strong>返回值：</strong></p><ul><li>array|null：错误信息或 null。</li></ul><p><strong>示例：</strong></p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$vali </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> validate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;email&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;邮件地址&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;email&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;test@example.com&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;required&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;name&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;phone&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;province&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;city&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;district&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;detail&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ($vali) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    json</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">($vali);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="create-sign-params-secret-array-encode-false" tabindex="-1"><code>create_sign($params, $secret = &#39;&#39;, $array_encode = false)</code> <a class="header-anchor" href="#create-sign-params-secret-array-encode-false" aria-label="Permalink to “create_sign($params, $secret = &#39;&#39;, $array_encode = false)”">​</a></h3><p>生成签名。</p><p><strong>参数：</strong></p><ul><li><code>$params</code> (array)：参与签名的参数。</li><li><code>$secret</code> (string)：签名密钥（默认从配置获取）。</li><li><code>$array_encode</code> (bool)：是否对数组参数进行 JSON 编码（默认 false）。</li></ul><p><strong>返回值：</strong></p><ul><li>string：大写 MD5 签名。</li></ul><p><strong>示例：</strong></p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$sign </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> create_sign</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;id&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;name&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;John&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]);</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $sign; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 输出签名</span></span></code></pre></div><h3 id="curl-aliyun-url-bodys-method-post" tabindex="-1"><code>curl_aliyun($url, $bodys = &#39;&#39;, $method = &#39;POST&#39;)</code> <a class="header-anchor" href="#curl-aliyun-url-bodys-method-post" aria-label="Permalink to “curl_aliyun($url, $bodys = &#39;&#39;, $method = &#39;POST&#39;)”">​</a></h3><p>调用阿里云 API。</p><p><strong>参数：</strong></p><ul><li><code>$url</code> (string)：API 地址。</li><li><code>$bodys</code> (string|array)：请求体（默认空）。</li><li><code>$method</code> (string)：请求方法（默认 &#39;POST&#39;）。</li></ul><p><strong>返回值：</strong></p><ul><li>array：API 响应。</li></ul><p><strong>示例：</strong></p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$response </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> curl_aliyun</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;https://api.aliyun.com&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;key&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;value&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">($response); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 输出 API 响应</span></span></code></pre></div><h3 id="array-order-by" tabindex="-1"><code>array_order_by(...)</code> <a class="header-anchor" href="#array-order-by" aria-label="Permalink to “array_order_by(...)”">​</a></h3><p>按指定字段对数组进行排序。</p><p><strong>参数：</strong></p><ul><li>可变参数：数组、字段名、排序方式（如 SORT_DESC）。</li></ul><p><strong>返回值：</strong></p><ul><li>array：排序后的数组。</li></ul><p><strong>示例：</strong></p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$data </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;id&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">], [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;id&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]];</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">array_order_by</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">($data, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;id&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">SORT_ASC</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">($data); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 输出排序后的数组</span></span></code></pre></div><h3 id="call-retry-func-times-3-usleep-time-1000" tabindex="-1"><code>call_retry($func, $times = 3, $usleep_time = 1000)</code> <a class="header-anchor" href="#call-retry-func-times-3-usleep-time-1000" aria-label="Permalink to “call_retry($func, $times = 3, $usleep_time = 1000)”">​</a></h3><p>尝试多次运行回调函数。</p><p><strong>参数：</strong></p><ul><li><code>$func</code> (callable)：要执行的函数。</li><li><code>$times</code> (int)：尝试次数（默认 3）。</li><li><code>$usleep_time</code> (int)：每次尝试间隔（毫秒，默认 1000）。</li></ul><p><strong>示例：</strong></p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">call_retry</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;flag&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;OK&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">];</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h3 id="cookie-name-value-expire-0" tabindex="-1"><code>cookie($name, $value = &#39;&#39;, $expire = 0)</code> <a class="header-anchor" href="#cookie-name-value-expire-0" aria-label="Permalink to “cookie($name, $value = &#39;&#39;, $expire = 0)”">​</a></h3><p>设置或获取 Cookie。</p><p><strong>参数：</strong></p><ul><li><code>$name</code> (string)：Cookie 名称。</li><li><code>$value</code> (string|array)：Cookie 值（为空时获取，null 时删除）。</li><li><code>$expire</code> (int)：过期时间（秒，默认 0）。</li></ul><p><strong>返回值：</strong></p><ul><li>mixed：Cookie 值或 null。</li></ul><p><strong>示例：</strong></p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cookie</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;user&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;John&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3600</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 设置 Cookie</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> cookie</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;user&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 输出：John</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cookie</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;user&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 删除 Cookie</span></span></code></pre></div><h3 id="cookie-delete-name" tabindex="-1"><code>cookie_delete($name)</code> <a class="header-anchor" href="#cookie-delete-name" aria-label="Permalink to “cookie_delete($name)”">​</a></h3><p>删除指定 Cookie。</p><p><strong>参数：</strong></p><ul><li><code>$name</code> (string)：Cookie 名称。</li></ul><p><strong>示例：</strong></p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cookie_delete</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;user&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h3 id="create-dir-if-not-exists-arr" tabindex="-1"><code>create_dir_if_not_exists($arr)</code> <a class="header-anchor" href="#create-dir-if-not-exists-arr" aria-label="Permalink to “create_dir_if_not_exists($arr)”">​</a></h3><p>创建目录（如果不存在）。</p><p><strong>参数：</strong></p><ul><li><code>$arr</code> (string|array)：目录路径或路径数组。</li></ul><p><strong>示例：</strong></p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">create_dir_if_not_exists</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/path/to/dir&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h3 id="format-money-money-len-2-sign-¥" tabindex="-1"><code>format_money($money, $len = 2, $sign = &#39;￥&#39;)</code> <a class="header-anchor" href="#format-money-money-len-2-sign-¥" aria-label="Permalink to “format_money($money, $len = 2, $sign = &#39;￥&#39;)”">​</a></h3><p>格式化金额。</p><p><strong>参数：</strong></p><ul><li><code>$money</code> (float)：金额。</li><li><code>$len</code> (int)：小数位数（默认 2）。</li><li><code>$sign</code> (string)：货币符号（默认 &#39;￥&#39;）。</li></ul><p><strong>返回值：</strong></p><ul><li>string：格式化后的金额。</li></ul><p><strong>示例：</strong></p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> format_money</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1234.567</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 输出：￥1,234.57</span></span></code></pre></div><h3 id="get-dates-start-end" tabindex="-1"><code>get_dates($start, $end)</code> <a class="header-anchor" href="#get-dates-start-end" aria-label="Permalink to “get_dates($start, $end)”">​</a></h3><p>返回两个日期之间的日期数组。</p><p><strong>参数：</strong></p><ul><li><code>$start</code> (string)：开始日期（格式 Y-m-d）。</li><li><code>$end</code> (string)：结束日期（格式 Y-m-d）。</li></ul><p><strong>返回值：</strong></p><ul><li>array：日期数组。</li></ul><p><strong>示例：</strong></p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$dates </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> get_dates</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;2023-01-01&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;2023-01-03&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">($dates); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 输出：[&#39;2023-01-01&#39;, &#39;2023-01-02&#39;, &#39;2023-01-03&#39;]</span></span></code></pre></div><h3 id="get-date-china-date" tabindex="-1"><code>get_date_china($date)</code> <a class="header-anchor" href="#get-date-china-date" aria-label="Permalink to “get_date_china($date)”">​</a></h3><p>获取日期是星期几（中文）。</p><p><strong>参数：</strong></p><ul><li><code>$date</code> (string)：日期（格式 Y-m-d）。</li></ul><p><strong>返回值：</strong></p><ul><li>string：星期几。</li></ul><p><strong>示例：</strong></p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> get_date_china</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;2023-01-01&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 输出：日</span></span></code></pre></div><h3 id="get-deep-dir-path" tabindex="-1"><code>get_deep_dir($path)</code> <a class="header-anchor" href="#get-deep-dir-path" aria-label="Permalink to “get_deep_dir($path)”">​</a></h3><p>获取目录及其子目录列表。</p><p><strong>参数：</strong></p><ul><li><code>$path</code> (string)：目录路径。</li></ul><p><strong>返回值：</strong></p><ul><li>array：目录列表。</li></ul><p><strong>示例：</strong></p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$dirs </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> get_deep_dir</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/path/to/dir&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">($dirs); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 输出目录列表</span></span></code></pre></div><h3 id="get-dir-name" tabindex="-1"><code>get_dir($name)</code> <a class="header-anchor" href="#get-dir-name" aria-label="Permalink to “get_dir($name)”">​</a></h3><p>获取文件路径的目录部分。</p><p><strong>参数：</strong></p><ul><li><code>$name</code> (string)：文件路径。</li></ul><p><strong>返回值：</strong></p><ul><li>string：目录路径。</li></ul><p><strong>示例：</strong></p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> get_dir</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/path/to/file.txt&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 输出：/path/to</span></span></code></pre></div><h3 id="get-ext-name" tabindex="-1"><code>get_ext($name)</code> <a class="header-anchor" href="#get-ext-name" aria-label="Permalink to “get_ext($name)”">​</a></h3><p>获取文件扩展名。</p><p><strong>参数：</strong></p><ul><li><code>$name</code> (string)：文件路径或 URL。</li></ul><p><strong>返回值：</strong></p><ul><li>string：扩展名。</li></ul><p><strong>示例：</strong></p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> get_ext</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;file.txt&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 输出：txt</span></span></code></pre></div><h3 id="get-name-name" tabindex="-1"><code>get_name($name)</code> <a class="header-anchor" href="#get-name-name" aria-label="Permalink to “get_name($name)”">​</a></h3><p>获取文件名（不含扩展名）。</p><p><strong>参数：</strong></p><ul><li><code>$name</code> (string)：文件路径或 URL。</li></ul><p><strong>返回值：</strong></p><ul><li>string：文件名。</li></ul><p><strong>示例：</strong></p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> get_name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/path/to/file.txt&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 输出：file</span></span></code></pre></div><h3 id="get-file-id" tabindex="-1"><code>get_file($id)</code> <a class="header-anchor" href="#get-file-id" aria-label="Permalink to “get_file($id)”">​</a></h3><p>获取文件信息（从数据库）。</p><p><strong>参数：</strong></p><ul><li><code>$id</code> (string|array)：文件 ID 或查询条件。</li></ul><p><strong>返回值：</strong></p><ul><li>array：文件信息。</li></ul><p><strong>示例：</strong></p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$file </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> get_file</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">($file); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 输出文件信息</span></span></code></pre></div><h3 id="get-ip-type-0-adv-false" tabindex="-1"><code>get_ip($type = 0, $adv = false)</code> <a class="header-anchor" href="#get-ip-type-0-adv-false" aria-label="Permalink to “get_ip($type = 0, $adv = false)”">​</a></h3><p>获取客户端 IP 地址。</p><p><strong>参数：</strong></p><ul><li><code>$type</code> (int)：返回类型（0: 字符串，1: 整数，默认 0）。</li><li><code>$adv</code> (bool)：是否使用高级方法（默认 false）。</li></ul><p><strong>返回值：</strong></p><ul><li>string|int：IP 地址。</li></ul><p><strong>示例：</strong></p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> get_ip</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 输出：127.0.0.1</span></span></code></pre></div><h3 id="get-server-headers-name" tabindex="-1"><code>get_server_headers($name = &#39;&#39;)</code> <a class="header-anchor" href="#get-server-headers-name" aria-label="Permalink to “get_server_headers($name = &#39;&#39;)”">​</a></h3><p>获取服务器请求头。</p><p><strong>参数：</strong></p><ul><li><code>$name</code> (string)：指定请求头名称（为空时返回所有头）。</li></ul><p><strong>返回值：</strong></p><ul><li>string|array：请求头值或所有头。</li></ul><p><strong>示例：</strong></p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> get_server_headers</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;user-agent&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 输出 User-Agent</span></span></code></pre></div><h3 id="host" tabindex="-1"><code>host()</code> <a class="header-anchor" href="#host" aria-label="Permalink to “host()”">​</a></h3><p>获取主机地址。</p><p><strong>返回值：</strong></p><ul><li>string：主机地址。</li></ul><p><strong>示例：</strong></p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> host</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 输出：https://example.com</span></span></code></pre></div><h3 id="is-ajax" tabindex="-1"><code>is_ajax()</code> <a class="header-anchor" href="#is-ajax" aria-label="Permalink to “is_ajax()”">​</a></h3><p>判断是否为 AJAX 请求。</p><p><strong>返回值：</strong></p><ul><li>bool：是否为 AJAX 请求。</li></ul><p><strong>示例：</strong></p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">is_ajax</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()) {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;This is an AJAX request&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="is-cli" tabindex="-1"><code>is_cli()</code> <a class="header-anchor" href="#is-cli" aria-label="Permalink to “is_cli()”">​</a></h3><p>判断是否为命令行环境。</p><p><strong>返回值：</strong></p><ul><li>bool：是否为命令行。</li></ul><p><strong>示例：</strong></p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">is_cli</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()) {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;Running in CLI&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="is-json-data-assoc-false" tabindex="-1"><code>is_json($data, $assoc = false)</code> <a class="header-anchor" href="#is-json-data-assoc-false" aria-label="Permalink to “is_json($data, $assoc = false)”">​</a></h3><p>判断字符串是否为 JSON 格式。</p><p><strong>参数：</strong></p><ul><li><code>$data</code> (string)：输入字符串。</li><li><code>$assoc</code> (bool)：是否返回关联数组（默认 false）。</li></ul><p><strong>返回值：</strong></p><ul><li>mixed：解析后的 JSON 数据或 false。</li></ul><p><strong>示例：</strong></p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$json </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> is_json</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;{&quot;name&quot;:&quot;John&quot;}&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">($json); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 输出数组</span></span></code></pre></div><h3 id="is-local" tabindex="-1"><code>is_local()</code> <a class="header-anchor" href="#is-local" aria-label="Permalink to “is_local()”">​</a></h3><p>判断是否为本地环境。</p><p><strong>返回值：</strong></p><ul><li>bool：是否为本地环境。</li></ul><p><strong>示例：</strong></p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">is_local</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()) {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;Running locally&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="is-post" tabindex="-1"><code>is_post()</code> <a class="header-anchor" href="#is-post" aria-label="Permalink to “is_post()”">​</a></h3><p>判断是否为 POST 请求。</p><p><strong>返回值：</strong></p><ul><li>bool：是否为 POST 请求。</li></ul><p><strong>示例：</strong></p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">is_post</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()) {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;This is a POST request&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="is-ssl" tabindex="-1"><code>is_ssl()</code> <a class="header-anchor" href="#is-ssl" aria-label="Permalink to “is_ssl()”">​</a></h3><p>判断是否为 HTTPS 协议。</p><p><strong>返回值：</strong></p><ul><li>bool：是否为 HTTPS。</li></ul><p><strong>示例：</strong></p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">is_ssl</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()) {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;Using HTTPS&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="now" tabindex="-1"><code>now()</code> <a class="header-anchor" href="#now" aria-label="Permalink to “now()”">​</a></h3><p>获取当前时间。</p><p><strong>返回值：</strong></p><ul><li>string：当前时间（格式 Y-m-d H:i:s）。</li></ul><p><strong>示例：</strong></p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> now</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 输出：2025-07-14 16:58:00</span></span></code></pre></div><h3 id="price-format-yuan-dot-2" tabindex="-1"><code>price_format($yuan, $dot = 2)</code> <a class="header-anchor" href="#price-format-yuan-dot-2" aria-label="Permalink to “price_format($yuan, $dot = 2)”">​</a></h3><p>格式化价格。</p><p><strong>参数：</strong></p><ul><li><code>$yuan</code> (float)：价格。</li><li><code>$dot</code> (int)：小数位数（默认 2）。</li></ul><p><strong>返回值：</strong></p><ul><li>string：格式化后的价格。</li></ul><p><strong>示例：</strong></p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> price_format</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">123.456</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 输出：123.46</span></span></code></pre></div><h3 id="show-number-num" tabindex="-1"><code>show_number($num)</code> <a class="header-anchor" href="#show-number-num" aria-label="Permalink to “show_number($num)”">​</a></h3><p>优化数字显示（去除末尾多余的 0 和小数点）。</p><p><strong>参数：</strong></p><ul><li><code>$num</code> (float|string)：数字。</li></ul><p><strong>返回值：</strong></p><ul><li>string：优化后的数字。</li></ul><p><strong>示例：</strong></p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> show_number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 输出：1.1</span></span></code></pre></div><h3 id="add-action-name-call-level-20" tabindex="-1"><code>add_action($name, $call, $level = 20)</code> <a class="header-anchor" href="#add-action-name-call-level-20" aria-label="Permalink to “add_action($name, $call, $level = 20)”">​</a></h3><p>添加动作钩子。</p><p><strong>参数：</strong></p><ul><li><code>$name</code> (string)：钩子名称。</li><li><code>$call</code> (callable)：回调函数。</li><li><code>$level</code> (int)：优先级（默认 20）。</li></ul><p><strong>示例：</strong></p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">add_action</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;my_hook&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">($data) {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;Action triggered&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><h3 id="do-action-name-par-null" tabindex="-1"><code>do_action($name, &amp;$par = null)</code> <a class="header-anchor" href="#do-action-name-par-null" aria-label="Permalink to “do_action($name, &amp;$par = null)”">​</a></h3><p>执行动作钩子。</p><p><strong>参数：</strong></p><ul><li><code>$name</code> (string)：钩子名称。</li><li><code>$par</code> (mixed)：传递给回调函数的参数。</li></ul><p><strong>示例：</strong></p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">do_action</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;my_hook&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h3 id="install-sql-file-call" tabindex="-1"><code>install_sql($file, $call)</code> <a class="header-anchor" href="#install-sql-file-call" aria-label="Permalink to “install_sql($file, $call)”">​</a></h3><p>从文件中执行 SQL 语句。</p><p><strong>参数：</strong></p><ul><li><code>$file</code> (string)：SQL 文件路径。</li><li><code>$call</code> (callable)：执行 SQL 的回调函数。</li></ul><p><strong>示例：</strong></p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">install_sql</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;script.sql&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">($sql) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    db_query</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">($sql);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><h3 id="install-sql-get-next-fp" tabindex="-1"><code>install_sql_get_next($fp)</code> <a class="header-anchor" href="#install-sql-get-next-fp" aria-label="Permalink to “install_sql_get_next($fp)”">​</a></h3><p>从文件中逐条获取 SQL 语句。</p><p><strong>参数：</strong></p><ul><li><code>$fp</code> (resource)：文件句柄。</li></ul><p><strong>返回值：</strong></p><ul><li>string：SQL 语句。</li></ul><p><strong>示例：</strong></p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$fp </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> fopen</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;script.sql&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;r&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$sql </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> install_sql_get_next</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">($fp);</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $sql; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 输出单条 SQL</span></span></code></pre></div><h3 id="get-ins-key-call" tabindex="-1"><code>get_ins($key, $call)</code> <a class="header-anchor" href="#get-ins-key-call" aria-label="Permalink to “get_ins($key, $call)”">​</a></h3><p>避免重复执行回调函数。</p><p><strong>参数：</strong></p><ul><li><code>$key</code> (string)：唯一键。</li><li><code>$call</code> (callable)：回调函数。</li></ul><p><strong>示例：</strong></p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">get_ins</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;my_key&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;Run once&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><h3 id="run-cmd-unique-argv-find-php-cmd-php" tabindex="-1"><code>run_cmd_unique($argv, $find = &#39;php cmd.php&#39;)</code> <a class="header-anchor" href="#run-cmd-unique-argv-find-php-cmd-php" aria-label="Permalink to “run_cmd_unique($argv, $find = &#39;php cmd.php&#39;)”">​</a></h3><p>防止命令行重复执行。</p><p><strong>参数：</strong></p><ul><li><code>$argv</code> (array)：命令行参数。</li><li><code>$find</code> (string)：查找的命令（默认 &#39;php cmd.php&#39;）。</li></ul><p><strong>示例：</strong></p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">run_cmd_unique</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">($argv);</span></span></code></pre></div><h3 id="import-file-vars-check-vars-false" tabindex="-1"><code>import($file, $vars = [], $check_vars = false)</code> <a class="header-anchor" href="#import-file-vars-check-vars-false" aria-label="Permalink to “import($file, $vars = [], $check_vars = false)”">​</a></h3><p>包含 PHP 文件。</p><p><strong>参数：</strong></p><ul><li><code>$file</code> (string)：文件路径。</li><li><code>$vars</code> (array)：传递的变量。</li><li><code>$check_vars</code> (bool)：是否检查变量（默认 false）。</li></ul><p><strong>返回值：</strong></p><ul><li>bool：是否包含成功。</li></ul><p><strong>示例：</strong></p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;file.php&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;var&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;value&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]);</span></span></code></pre></div><h3 id="set-config-title-body" tabindex="-1"><code>set_config($title, $body)</code> <a class="header-anchor" href="#set-config-title-body" aria-label="Permalink to “set_config($title, $body)”">​</a></h3><p>设置配置项（存入数据库）。</p><p><strong>参数：</strong></p><ul><li><code>$title</code> (string)：配置名称。</li><li><code>$body</code> (mixed)：配置值。</li></ul><p><strong>示例：</strong></p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">set_config</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;site_name&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;My Site&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h3 id="get-config-title" tabindex="-1"><code>get_config($title)</code> <a class="header-anchor" href="#get-config-title" aria-label="Permalink to “get_config($title)”">​</a></h3><p>获取配置项（优先从数据库获取）。</p><p><strong>参数：</strong></p><ul><li><code>$title</code> (string|array)：配置名称或名称数组。</li></ul><p><strong>返回值：</strong></p><ul><li>mixed：配置值。</li></ul><p><strong>示例：</strong></p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> get_config</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;site_name&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 输出：My Site</span></span></code></pre></div><h3 id="page-size-name" tabindex="-1"><code>page_size($name)</code> <a class="header-anchor" href="#page-size-name" aria-label="Permalink to “page_size($name)”">​</a></h3><p>获取或设置分页大小。</p><p><strong>参数：</strong></p><ul><li><code>$name</code> (string)：分页名称。</li></ul><p><strong>返回值：</strong></p><ul><li>int：分页大小。</li></ul><p><strong>示例：</strong></p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> page_size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;users&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 输出：20</span></span></code></pre></div><h3 id="aes-encode-data-key-iv-type-aes-128-cbc-options" tabindex="-1"><code>aes_encode($data, $key = &#39;&#39;, $iv = &#39;&#39;, $type = &#39;AES-128-CBC&#39;, $options = &#39;&#39;)</code> <a class="header-anchor" href="#aes-encode-data-key-iv-type-aes-128-cbc-options" aria-label="Permalink to “aes_encode($data, $key = &#39;&#39;, $iv = &#39;&#39;, $type = &#39;AES-128-CBC&#39;, $options = &#39;&#39;)”">​</a></h3><p>AES 加密数据。</p><p><strong>参数：</strong></p><ul><li><code>$data</code> (mixed)：要加密的数据。</li><li><code>$key</code> (string)：加密密钥。</li><li><code>$iv</code> (string)：初始化向量。</li><li><code>$type</code> (string)：加密类型（默认 &#39;AES-128-CBC&#39;）。</li><li><code>$options</code> (string)：加密选项。</li></ul><p><strong>返回值：</strong></p><ul><li>string：Base64 编码的加密数据。</li></ul><p><strong>示例：</strong></p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$encrypted </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> aes_encode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;secret&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $encrypted; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 输出加密字符串</span></span></code></pre></div><h3 id="aes-decode-data-key-iv-type-aes-128-cbc-options" tabindex="-1"><code>aes_decode($data, $key = &#39;&#39;, $iv = &#39;&#39;, $type = &#39;AES-128-CBC&#39;, $options = &#39;&#39;)</code> <a class="header-anchor" href="#aes-decode-data-key-iv-type-aes-128-cbc-options" aria-label="Permalink to “aes_decode($data, $key = &#39;&#39;, $iv = &#39;&#39;, $type = &#39;AES-128-CBC&#39;, $options = &#39;&#39;)”">​</a></h3><p>AES 解密数据。</p><p><strong>参数：</strong></p><ul><li><code>$data</code> (string)：Base64 编码的加密数据。</li><li><code>$key</code> (string)：解密密钥。</li><li><code>$iv</code> (string)：初始化向量。</li><li><code>$type</code> (string)：解密类型（默认 &#39;AES-128-CBC&#39;）。</li><li><code>$options</code> (string)：解密选项。</li></ul><p><strong>返回值：</strong></p><ul><li>mixed：解密后的数据。</li></ul><p><strong>示例：</strong></p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$decrypted </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> aes_decode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">($encrypted);</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $decrypted; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 输出：secret</span></span></code></pre></div><h3 id="set-lang-lang-zh-cn" tabindex="-1"><code>set_lang($lang = &#39;zh-cn&#39;)</code> <a class="header-anchor" href="#set-lang-lang-zh-cn" aria-label="Permalink to “set_lang($lang = &#39;zh-cn&#39;)”">​</a></h3><p>设置多语言。</p><p><strong>参数：</strong></p><ul><li><code>$lang</code> (string)：语言代码（默认 &#39;zh-cn&#39;）。</li></ul><p><strong>示例：</strong></p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">set_lang</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;en-us&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h3 id="lang-name-val-pre-app" tabindex="-1"><code>lang($name, $val = [], $pre = &#39;app&#39;)</code> <a class="header-anchor" href="#lang-name-val-pre-app" aria-label="Permalink to “lang($name, $val = [], $pre = &#39;app&#39;)”">​</a></h3><p>获取多语言翻译。</p><p><strong>参数：</strong></p><ul><li><code>$name</code> (string)：翻译键。</li><li><code>$val</code> (array)：替换参数。</li><li><code>$pre</code> (string)：前缀（默认 &#39;app&#39;）。</li></ul><p><strong>返回值：</strong></p><ul><li>string：翻译后的字符串。</li></ul><p><strong>示例：</strong></p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> lang</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;hello&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;name&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;John&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 输出：Hello, John</span></span></code></pre></div><h3 id="gz-encode-arr-or-str" tabindex="-1"><code>gz_encode($arr_or_str)</code> <a class="header-anchor" href="#gz-encode-arr-or-str" aria-label="Permalink to “gz_encode($arr_or_str)”">​</a></h3><p>压缩字符串或数组。</p><p><strong>参数：</strong></p><ul><li><code>$arr_or_str</code> (string|array)：输入数据。</li></ul><p><strong>返回值：</strong></p><ul><li>string：压缩后的数据。</li></ul><p><strong>示例：</strong></p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$compressed </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> gz_encode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;data&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;test&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]);</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $compressed; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 输出压缩数据</span></span></code></pre></div><h3 id="gz-decode-str" tabindex="-1"><code>gz_decode($str)</code> <a class="header-anchor" href="#gz-decode-str" aria-label="Permalink to “gz_decode($str)”">​</a></h3><p>解压缩字符串。</p><p><strong>参数：</strong></p><ul><li><code>$str</code> (string)：压缩数据。</li></ul><p><strong>返回值：</strong></p><ul><li>mixed：解压缩后的数据。</li></ul><p><strong>示例：</strong></p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$decompressed </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> gz_decode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">($compressed);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">($decompressed); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 输出原始数据</span></span></code></pre></div><h3 id="copy-base64-data" tabindex="-1"><code>copy_base64_data()</code> <a class="header-anchor" href="#copy-base64-data" aria-label="Permalink to “copy_base64_data()”">​</a></h3><p>生成复制 Base64 图片数据的 JavaScript 代码。</p><p><strong>返回值：</strong></p><ul><li>string：JavaScript 代码。</li></ul><p><strong>示例：</strong></p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> copy_base64_data</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 输出 JS 代码</span></span></code></pre></div><h3 id="is-image-url" tabindex="-1"><code>is_image($url)</code> <a class="header-anchor" href="#is-image-url" aria-label="Permalink to “is_image($url)”">​</a></h3><p>判断是否为图片文件。</p><p><strong>参数：</strong></p><ul><li><code>$url</code> (string)：文件 URL 或路径。</li></ul><p><strong>返回值：</strong></p><ul><li>bool：是否为图片。</li></ul><p><strong>示例：</strong></p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">is_image</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;image.jpg&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)) {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;This is an image&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="is-video-url" tabindex="-1"><code>is_video($url)</code> <a class="header-anchor" href="#is-video-url" aria-label="Permalink to “is_video($url)”">​</a></h3><p>判断是否为视频文件。</p><p><strong>参数：</strong></p><ul><li><code>$url</code> (string)：文件 URL 或路径。</li></ul><p><strong>返回值：</strong></p><ul><li>bool：是否为视频。</li></ul><p><strong>示例：</strong></p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">is_video</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;video.mp4&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)) {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;This is a video&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="is-audio-url" tabindex="-1"><code>is_audio($url)</code> <a class="header-anchor" href="#is-audio-url" aria-label="Permalink to “is_audio($url)”">​</a></h3><p>判断是否为音频文件。</p><p><strong>参数：</strong></p><ul><li><code>$url</code> (string)：文件 URL 或路径。</li></ul><p><strong>返回值：</strong></p><ul><li>bool：是否为音频。</li></ul><p><strong>示例：</strong></p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">is_audio</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;audio.mp3&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)) {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;This is an audio&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="get-upload-url-f" tabindex="-1"><code>get_upload_url($f)</code> <a class="header-anchor" href="#get-upload-url-f" aria-label="Permalink to “get_upload_url($f)”">​</a></h3><p>将带 HTTP 的 URL 转换为上传路径格式。</p><p><strong>参数：</strong></p><ul><li><code>$f</code> (string)：URL 或路径。</li></ul><p><strong>返回值：</strong></p><ul><li>string：转换后的路径。</li></ul><p><strong>示例：</strong></p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> get_upload_url</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;https://example.com/uploads/file.jpg&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 输出：uploads/file.jpg</span></span></code></pre></div><h3 id="pr-str" tabindex="-1"><code>pr($str)</code> <a class="header-anchor" href="#pr-str" aria-label="Permalink to “pr($str)”">​</a></h3><p>格式化输出数组或字符串。</p><p><strong>参数：</strong></p><ul><li><code>$str</code> (mixed)：要输出的数据。</li></ul><p><strong>示例：</strong></p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;name&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;John&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 输出格式化数组</span></span></code></pre></div><h3 id="echats-ele-options" tabindex="-1"><code>echats($ele, $options = [])</code> <a class="header-anchor" href="#echats-ele-options" aria-label="Permalink to “echats($ele, $options = [])”">​</a></h3><p>生成 ECharts 图表。</p><p><strong>参数：</strong></p><ul><li><code>$ele</code> (array)：图表元素配置（<code>id</code>, <code>width</code>, <code>height</code>, <code>class</code>）。</li><li><code>$options</code> (array)：ECharts 配置。</li></ul><p><strong>返回值：</strong></p><ul><li>array：包含 JS 代码和 HTML。</li></ul><p><strong>示例：</strong></p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$chart </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> echats</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;id&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;main1&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;width&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 600</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;height&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 400</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">], [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &#39;title&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;text&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;示例图表&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &#39;xAxis&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;data&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;A&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;B&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;C&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]],</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &#39;series&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;data&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">20</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">36</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">], </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;type&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;bar&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]);</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $chart[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;html&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">];</span></span></code></pre></div><h3 id="echats-reload" tabindex="-1"><code>echats_reload()</code> <a class="header-anchor" href="#echats-reload" aria-label="Permalink to “echats_reload()”">​</a></h3><p>刷新 ECharts 图表。</p><p><strong>返回值：</strong></p><ul><li>string：刷新图表的 JS 代码。</li></ul><p><strong>示例：</strong></p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> echats_reload</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 输出刷新 JS 代码</span></span></code></pre></div><h3 id="get-browser-lang" tabindex="-1"><code>get_browser_lang()</code> <a class="header-anchor" href="#get-browser-lang" aria-label="Permalink to “get_browser_lang()”">​</a></h3><p>取当前浏览器语言</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span>get_browser_lang()</span></span></code></pre></div><h3 id="find-files-arr-return-file-false" tabindex="-1"><code>find_files($arr,$return_file = false )</code> <a class="header-anchor" href="#find-files-arr-return-file-false" aria-label="Permalink to “find_files($arr,$return_file = false )”">​</a></h3><p>默认查找文件，找到后包含文件</p><p><code>$return_file</code> 为 <code>true</code> 时返回找到的文件完整路径。</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span>find_files($arr = [])</span></span></code></pre></div><h3 id="app-class-name" tabindex="-1"><code>app(class_name)</code> <a class="header-anchor" href="#app-class-name" aria-label="Permalink to “app(class_name)”">​</a></h3><p>获取应用类实例。</p><p><strong>参数：</strong></p><ul><li><code>$class_name</code> (string)：类名。</li></ul><p><strong>返回值：</strong></p><ul><li>object：类实例。</li></ul><h3 id="生成订单号" tabindex="-1">生成订单号 <a class="header-anchor" href="#生成订单号" aria-label="Permalink to “生成订单号”">​</a></h3><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span>create_order_num()</span></span></code></pre></div><h3 id="解压文件" tabindex="-1">解压文件 <a class="header-anchor" href="#解压文件" aria-label="Permalink to “解压文件”">​</a></h3><p>支持7z, zip, rar, tar, bz2, gz, tar</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span>unzip($input)</span></span></code></pre></div><h3 id="数据库缓存数据" tabindex="-1">数据库缓存数据 <a class="header-anchor" href="#数据库缓存数据" aria-label="Permalink to “数据库缓存数据”">​</a></h3><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span>cache_data($key, $data = null, $expire = 0)</span></span></code></pre></div><p>删除</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span>cache_data_delete($key)</span></span></code></pre></div><h3 id="把url中的域名部分移除" tabindex="-1">把URL中的域名部分移除 <a class="header-anchor" href="#把url中的域名部分移除" aria-label="Permalink to “把URL中的域名部分移除”">​</a></h3><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span>remove_http($url)</span></span></code></pre></div><h3 id="图片类处理init" tabindex="-1">图片类处理INIT <a class="header-anchor" href="#图片类处理init" aria-label="Permalink to “图片类处理INIT”">​</a></h3><p><a href="https://image.intervention.io/v3" target="_blank" rel="noreferrer">https://image.intervention.io/v3</a></p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span>image_drive()</span></span></code></pre></div><h3 id="运行命令-不等待命令执行完成" tabindex="-1">运行命令,不等待命令执行完成 <a class="header-anchor" href="#运行命令-不等待命令执行完成" aria-label="Permalink to “运行命令,不等待命令执行完成”">​</a></h3><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span>run_cmd($cmd)</span></span></code></pre></div><h3 id="复制目录" tabindex="-1">复制目录 <a class="header-anchor" href="#复制目录" aria-label="Permalink to “复制目录”">​</a></h3><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span>copy_dir($src, $dst)</span></span></code></pre></div><h3 id="发布模块下的资源" tabindex="-1">发布模块下的资源 <a class="header-anchor" href="#发布模块下的资源" aria-label="Permalink to “发布模块下的资源”">​</a></h3><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span>publish_assets(&#39;admin&#39;,__DIR__)</span></span></code></pre></div>`,931)]))}const c=s(t,[["render",h]]);export{o as __pageData,c as default};
